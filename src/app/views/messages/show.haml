%h1 Message Editor
%div#message-editor
  %form#details-form{method: 'post', 'v-on:input' => 'modelChange'}
    %input{type: 'hidden', name: '_method', value: 'PUT'}
    
    - if @message.sendable?
      %button{onclick: 'window.onbeforeunload = null;'} Save
      %a{onclick: 'window.onbeforeunload = null;', href: @presend_url}
        %button{'v-bind:disabled' => 'hasChanged', type: 'button'} Send
      %br

    %h2 Properties    
    %p
      This email message 
      %b= @message.status_phrase
    %label.inline-block
      Subject
      %input{name: 'message_subject', value: @message.message_subject, disabled: !@message.sendable?}
    %input{name: 'template_plugin_package', type: 'hidden'}
    %input{name: 'template_plugin_id', type: 'hidden'}
    %label.inline-block
      Template
      %select#template-select{'v-on:change' => 'updateTemplateFields', disabled: !@message.sendable?}
        %option Select one...
        - @plugins.each do |plugin|
          - if plugin.templates.any?
            %optgroup{label: plugin.name}
              - plugin.templates.each do |template|
                %option{'data-package' => plugin.package, 'data-id' => template.id, selected: ('selected' if [plugin.package, template.id] == [@message.template_plugin_package, @message.template_plugin_id])}= template.name
    
    %h2 Content

    %input{type: 'hidden', name: 'sections_json', 'v-model' => 'JSON.stringify(sections)'}
    %transition-group#sections{name: 'section-list', tag: 'div'}
      .section{'v-for' => '(section, index) in sections', 'v-bind:key' => 'section.key'}
        %h3 {{ sectionKinds[section.plugin_package][section.plugin_id].name }}
        - if @message.sendable?
          .section-movement-buttons
            %button{type: 'button',
                    'v-on:click' => 'moveSectionUp(index)',
                    'v-bind:disabled' => 'index == 0'} Up
            %button{type: 'button',
                    'v-on:click' => 'moveSectionDown(index)',
                    'v-bind:disabled' => 'index == sections.length - 1'} Down
            %button{type: 'button',
                    'v-on:click' => 'deleteSection(index)'} Delete
        %label
          Title
          %input{'v-model' => 'section.title', disabled: !@message.sendable?}
        .section-property{'v-for' => '(type, name) in sectionKinds[section.plugin_package][section.plugin_id].properties'}
          %label
            {{ name }}
            %input{type: 'text',   'v-if' => 'type == "text"',      'v-model' => 'section.properties[name]', disabled: !@message.sendable?}
            %textarea{             'v-if' => 'type == "long_text"', 'v-model' => 'section.properties[name]', disabled: !@message.sendable?}
            %input{type: 'number', 'v-if' => 'type == "number"',    'v-model' => 'section.properties[name]', disabled: !@message.sendable?}
            %input{type: 'number', 'v-if' => 'type == "integer"',   'v-model' => 'section.properties[name]', disabled: !@message.sendable?, step: 1}

      - if @message.sendable?
        #section-creator{key: 'section-creator'}
          %h3 Create a New Section
          %select#section-insert-select{'v-on:change' => 'createSection'}
            %option{selected: 'selected'} Pick a kind...
            - @plugins.each do |plugin|
              - if plugin.section_kinds.any?
                %optgroup{label: plugin.name}
                  - plugin.section_kinds.each do |kind|
                    %option{'data-package' => plugin.package, 'data-id' => kind.id}= kind.name

  %iframe{src: @render_url}

%script= "const sections = #{@message.sections.to_json}"
%script= "const sectionKinds = #{@plugins.map { |p| [p.package, p.section_kinds.map { |k| [k.id, { name: k.name, properties: k.properties }] }.to_h] }.to_h.to_json}"
%script{src: 'https://cdn.jsdelivr.net/npm/vue/dist/vue.js'}
%script{src: '/js/message-editor.js'}
    
    